// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id               String            @id @default(uuid())
  name             String
  email            String            @unique
  password         String
  role             Role              @default(user)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt()
  reviewAndRatings ReviewAndRating[]
  orders           Order[]
  products         Product[]
  wishlists        Wishlist[]

  @@map("users")
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  products  Product[]

  @@map("categories")
}

model Product {
  id               String            @id @default(uuid())
  name             String
  description      String
  price            String
  image            String
  startDate        DateTime
  endDate          DateTime
  category         String
  categories       Category          @relation(fields: [category], references: [name])
  email            String
  users            User              @relation(fields: [email], references: [email])
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  reviewAndRatings ReviewAndRating[]
  wishlists        Wishlist[]
  orders           Order[]

  @@map("products")
}

model ReviewAndRating {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  user      String
  users     User     @relation(fields: [user], references: [id])
  product   String
  products  Product  @relation(fields: [product], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviewAndRatings")
}

model Order {
  id        String   @id @default(uuid())
  user      String
  users     User     @relation(fields: [user], references: [email])
  product   String
  products  Product  @relation(fields: [product], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orders")
}

model Wishlist {
  id        String   @id @default(uuid())
  user      String
  users     User     @relation(fields: [user], references: [email])
  product   String
  products  Product  @relation(fields: [product], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("wishlists")
}
